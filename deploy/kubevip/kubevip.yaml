apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-vip
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  name: system:kube-vip-role
rules:
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "create", "update", "list", "put"]
  - apiGroups: [""]
    resources: ["services", "services/status"]
    verbs: ["list","get","watch", "update"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: system:kube-vip-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-vip-role
subjects:
- kind: ServiceAccount
  name: kube-vip
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kube-vip-worker
  namespace: kube-system
spec:
  selector:
    matchLabels:
      name: kube-vip-worker
  template:
    metadata:
      labels:
        name: kube-vip-worker
    spec:
      containers:
      - image: ghcr.io/kube-vip/kube-vip:v0.3.9
        name: kube-vip
        command:
        - /kube-vip
        - service
        env:
          - name: vip_interface
            value: "eth0"
          - name: vip_arp
            value: "true"
          - name: vip_loglevel
            value: "4"
        resources:
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
      hostNetwork: true
      serviceAccountName: kube-vip
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      nodeSelector:
        node-role.kubernetes.io/worker: ""
